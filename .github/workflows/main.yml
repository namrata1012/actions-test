name: Run Tests

on:
  pull_request:
    branches:
      - main  # change this to your main branch

jobs:
  run_python_script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8  # change this to your desired Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # change this if you have dependencies

    - name: Install jitterbit
      uses: jitterbit/get-changed-files@v1
      with:
        format: 'space-delimited'

    - id: files
      uses: jitterbit/get-changed-files@v1
    - run: |
        for changed_file in ${{ steps.files.outputs.all }}; do
          python validate_schema_json.py ${changed_file}
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Set branch name
      run: echo "BRANCH_NAME=$(echo $GITHUB_REF | awk -F/ '{print $3}')" >> $GITHUB_ENV

    - name: Trigger Workflow 2
      uses: actions/github-script@v5
      with:
        script: |
          const response = await github.actions.createWorkflowDispatch({
            workflow: 'workflow_2.yml',
            ref: 'main',
            inputs: {
              branch_name: process.env.BRANCH_NAME
              }
          });
          console.log(response.data);
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


#  notify:
#    needs: run_python_script
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.8  # change this to your desired Python version
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt  # change this if you have dependencies
#
#      - name: Install jitterbit
#        uses: jitterbit/get-changed-files@v1
#        with:
#          format: 'space-delimited'
#
#      - id: files
#        uses: jitterbit/get-changed-files@v1
#      - run: |
#          for changed_file in ${{ steps.files.outputs.all }}; do
#            python create_ttl_files.py ${changed_file}
#          done
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
